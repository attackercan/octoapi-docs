openapi: 3.0.0

info:
  title: Octo Api
  version: 0.0.1

paths:
  /projects/:
    get:
      responses:
        '200':
          description: Returns a list of projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectGet'
    post:
      description: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPost'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGet'
  /projects/{projectId}:
    parameters:
      - in: path
        name: projectId
        schema:
          type: string
        required: true
    get:
      responses:
        '200':
          description: Get project by its ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGet'
        '404':
          description: Project not found
    patch:
      description: Edit project properties, including its status and scope.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatch'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGet'
        '404':
          description: Project not found
  /projects/{projectId}/stats/:
    parameters:
    - in: path
      name: projectId
      schema:
        type: string
      required: true
    get:
      description: Get general statistics of a project
      responses:
        '404':
          description: project not found
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStats'
  /projects/{projectId}/check/:
    parameters:
    - in: path
      name: projectId
      schema:
        type: string
      required: true
    post:
      description: check if a certain hosts and urls match with a project's scope
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeCheckRequest'
      responses:
        '404':
          description: project not found
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeCheckResponse'
  /projects/{projectId}/timerange/alerts:
    parameters:
    - in: path
      name: projectId
      schema:
        type: string
      required: true
    get:
      description: time slice stats for project's alerts
      parameters:
        - in: query
          name: from
          description: The time slice beginning in ISO format timestamp
          schema:
            type: string
          required: true
        - in: query
          name: to
          description: The time slice end in ISO format timestamp
          schema:
            type: string
          required: true
        - in: query
          name: steps
          description: Number of time segments. Defaults to 1
          schema:
            type: integer
      responses:
        '404':
          description: project not found
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  from:
                    type: number
                  to:
                    type: number
                  by_severity:
                    type: object
                    properties:
                      0:
                        type: integer
                      1:
                        type: integer
                      3:
                        type: integer
                      5:
                        type: integer
                      8:
                        type: integer
                      10:
                        type: integer
  /projects/{projectId}/timerange/tasks:
    parameters:
      - in: path
        name: projectId
        schema:
          type: string
        required: true
    get:
      description: time slice stats for project's tasks
      parameters:
        - in: query
          name: from
          description: The time slice beginning in ISO format timestamp
          schema:
            type: string
          required: true
        - in: query
          name: to
          description: The time slice end in ISO format timestamp
          schema:
            type: string
          required: true
        - in: query
          name: steps
          description: Number of time segments. Defaults to 1
          schema:
            type: integer
      responses:
        '404':
          description: project not found
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timerange'
  /projects/{projectId}/timerange/hosts:
    parameters:
      - in: path
        name: projectId
        schema:
          type: string
        required: true
    get:
      description: time slice stats for project's hosts
      parameters:
        - in: query
          name: from
          description: The time slice beginning in ISO format timestamp
          schema:
            type: string
          required: true
        - in: query
          name: to
          description: The time slice end in ISO format timestamp
          schema:
            type: string
          required: true
        - in: query
          name: steps
          description: Number of time segments. Defaults to 1
          schema:
            type: integer
      responses:
        '404':
          description: project not found
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timerange'
  /projects/{projectId}/timerange/ports:
    parameters:
      - in: path
        name: projectId
        schema:
          type: string
        required: true
    get:
      description: time slice stats for project's ports
      parameters:
        - in: query
          name: from
          description: The time slice beginning in ISO format timestamp
          schema:
            type: string
          required: true
        - in: query
          name: to
          description: The time slice end in ISO format timestamp
          schema:
            type: string
          required: true
        - in: query
          name: steps
          description: Number of time segments. Defaults to 1
          schema:
            type: integer
      responses:
        '404':
          description: project not found
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timerange'
  /alerts/:
    get:
      description: Returns a list of alerts
      parameters:
        - in: query
          name: content_digest
          description: search for the alert(s) with given content_digest(s)
          schema:
            type: string
        - in: query
          name: project_id
          description: search for alerts with given project id(s)
          schema:
            type: string
        - in: query
          name: severity
          description: search for alerts with given severity level(s)
          schema:
            type: integer
        - in: query
          name: status
          description: search for alerts with given status(es)
          schema:
            type: string
        - in: query
          name: cdate
          description: "alerts creating time in ISO fromat. This param name (and should) be prefixed with '$lt-' and '$gt-'
          to search for alert with creation date less or greater than given date.
          Example: /alerts?$lt-cdate=2022-01-27T11:06:34.727984&2022-04-27T11:06:34.727984&$gt-cdate=2020-04-27T11:06:34.727984
          "
          schema:
            type: string
        - in: query
          name: last_seen
          description: "alerts last seen time in ISO fromat. This param name (and should) be prefixed with '$lt-' and '$gt-'
          to search for alert with creation date less or greater than given date.
          Example: /alerts?$lt-cdate=2022-01-27T11:06:34.727984&2022-04-27T11:06:34.727984&$gt-cdate=2020-04-27T11:06:34.727984
          "
          schema:
            type: string
        - in: query
          name: sort
          description: "A key to sort the alerts by. Possible values: last_seen, cdate, severity.
          The value may be prefixed with '-' to reverse the order (e.g. -cdate, -severity)."
          schema:
            type: string
        - in: query
          name: skip
          description: number of items to be skipped for pagination
          schema:
            type: integer
        - in: query
          name: limit
          description: max number of items to be shown for pagination
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AlertGet'
                required:
                  - count
                  - items
  /alerts/{alertId}:
    parameters:
      - in: path
        name: alertId
        schema:
          type: string
        required: true
    get:
      description: Get an alert by its ID
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertGet'
        '404':
          description: Alert not found
    patch:
      description: Edit an alert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertPatch'
      responses:
        '404':
          description: Alert not found
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertGet'
  /alert-groups/:
    get:
      description: A list of alerts grouped by title
      parameters:
        - in: query
          name: substring
          description: a substring of alert title to match
          schema:
            type: string
        - in: query
          name: severity
          description: search for the alerts with given severity level(s)
          schema:
            type: integer
        - in: query
          name: project_id
          description: search for the alerts with given project id(s)
          schema:
            type: string
        - in: query
          name: status
          description: search for the alerts with given status(es)
          schema:
            type: string
        - in: query
          name: sort
          description: "A key to sort the alerts by. Possible values: severity.
          The value may be prefixed with '-' to reverse the order (e.g. -severity)."
          schema:
            type: string
        - in: query
          name: skip
          description: number of items to be skipped for pagination
          schema:
            type: integer
        - in: query
          name: limit
          description: max number of items to be shown for pagination
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertGroups'
  /hosts/:
    get:
      parameters:
        - in: query
          name: host
          description: a domain name(s) or an IP address(es) to match
          schema:
            type: string
        - in: query
          name: project_id
          description: search for hosts with given project id(s)
          schema:
            type: string
        - in: query
          name: found_by
          description: "search for hosts found by given tool.
          must be a tool name (e.g. 'crawler', 'altdns', etc.) or 'null'"
          schema:
            type: string
        - in: query
          name: pending
          description: "search for either pending or not pending hosts.
          Must be either 'True' or '1' to search for pending ones, and any other value to search
          for active ones"
          schema:
            type: string
        - in: query
          name: deleted
          description: "search for deleted hosts.
          Must be either 'True' or '1' to search for deleted hosts"
          schema:
            type: string
        - in: query
          name: port_count
          description: "Search for hosts with the given port count. Can also be
          used as '$lt-port_count' or '$gt-port_count' to search for hosts with number
          of ports less than or greater than given value respectively."
          schema:
            type: integer
        - in: query
          name: ports.port_number
          description: Search for hosts with the given port(s) open.
          schema:
            type: integer
        - in: query
          name: sort
          schema:
            type: string
          description: "the key to sort the output by. Must be on of: host, port_count.
          The value maybe pe prefixed with '-' to reverse the order e.g. -port_count"
        - in: query
          name: skip
          description: number of items to be skipped for pagination
          schema:
            type: integer
        - in: query
          name: limit
          description: max number of items to be shown for pagination
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hosts'
  /ports/:
    get:
      parameters:
        - in: query
          name: project_id
          description: search for hosts with given project id(s)
          schema:
            type: string
        - in: query
          name: sort
          description: "the key to sort the output by. Must be on of: rarest, newest."
          schema:
            type: string
        - in: query
          name: skip
          description: number of items to be skipped for pagination
          schema:
            type: integer
        - in: query
          name: limit
          description: max number of items to be shown for pagination
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ports'
  /stats/:
    get:
      description: Get combined general stats of one or multiple projects
      parameters:
        - in: query
          name: project_id
          description: projects to get combined stats for. if not specified, all projects are selected.
          schema:
            type: string
      responses:
        '404':
          description: project not found
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStats'

components:
  schemas:
    ProjectGet:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        settings:
          type: object
          properties:
            tasks_frequencies:
              type: object
              properties:
                altdns:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                amass:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                patator:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                crawler:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                dirsearch:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                ffuf:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                nessus:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                nmap:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                nuclei:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                phuipfpizdam:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                subjack:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                subfinder:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                waybackurls:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                wpscan:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                burp:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                grep:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
            pipeline_tasks:
              type: object
              properties:
                wildcard:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      options: { }
                    required:
                      - name
                      - options
                host:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      options: { }
                    required:
                      - name
                      - options
                port:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      options: { }
                    required:
                      - name
                      - options
                transaction:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      options: { }
                    required:
                      - name
                      - options
              required:
                - wildcard
                - host
                - port
                - transaction
          required:
            - tasks_frequencies
            - pipeline_tasks
        root_domains:
          type: array
          items:
            type: string
        blacklist:
          type: object
          properties:
            host:
              type: array
              items:
                type: string
            ipv4:
              type: array
              items:
                type: string
            ipv6:
              type: array
              items:
                type: string
            url:
              type: array
              items:
                type: string
          required:
            - host
            - ipv4
            - ipv6
            - url
        status:
          type: string
        allowed_ips:
          type: array
          items:
            type: string
        closest_rescan_at:
          type: string
          nullable: true
          pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
        schedule:
          type: array
          items:
            type: object
            properties:
              tool:
                type: string
              at:
                type: string
                nullable: true
                pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
            required:
              - tool
              - at
        rescan_window:
          type:
            object
          nullable: true
          properties:
            from:
              type: string
            to:
              type: string
        cdate:
          type: string
          pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
        mdate:
          type: string
          pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
      required:
        - id
        - name
        - settings
        - root_domains
        - blacklist
        - status
        - schedule
        - allowed_ips
        - closest_rescan_at
        - rescan_window
        - cdate
        - mdate
    ProjectPost:
      type: object
      properties:
        name:
          type: string
        root_domains:
          type: array
          items:
            type: string
        blacklist:
          type: object
          properties:
            host:
              type: array
              items:
                type: string
            ipv4:
              type: array
              items:
                type: string
            ipv6:
              type: array
              items:
                type: string
            url:
              type: array
              items:
                type: string
          required:
            - host
            - ipv4
            - ipv6
            - url
        allowed_ips:
          type: array
          items:
            type: string
        rescan_window:
          type: object
          nullable: true
          properties:
            from:
              type: string
            to:
              type: string
      required:
        - name
        - root_domains
        - blacklist
        - allowed_ips
        - rescan_window
    ProjectPatch:
      type: object
      properties:
        name:
          type: string
        settings:
          type: object
          properties:
            tasks_frequencies:
              type: object
              properties:
                altdns:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                amass:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                patator:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                crawler:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                dirsearch:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                ffuf:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                nessus:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                nmap:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                nuclei:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                phuipfpizdam:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                subjack:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                subfinder:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                waybackurls:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                wpscan:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                burp:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
                grep:
                  type: object
                  properties:
                    days:
                      type: integer
                    hours:
                      type: integer
            pipeline_tasks:
              type: object
              properties:
                wildcard:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      options: { }
                    required:
                      - name
                      - options
                host:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      options: { }
                    required:
                      - name
                      - options
                port:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      options: { }
                    required:
                      - name
                      - options
                transaction:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      options: { }
                    required:
                      - name
                      - options
              required:
                - wildcard
                - host
                - port
                - transaction
          required:
            - tasks_frequencies
            - pipeline_tasks
        root_domains:
          type: array
          items:
            type: string
        blacklist:
          type: object
          properties:
            host:
              type: array
              items:
                type: string
            ipv4:
              type: array
              items:
                type: string
            ipv6:
              type: array
              items:
                type: string
            url:
              type: array
              items:
                type: string
          required:
            - host
            - ipv4
            - ipv6
            - url
        status:
          type: string
        allowed_ips:
          type: array
          items:
            type: string
        schedule:
          type: array
          items:
            type: object
            properties:
              tool:
                type: string
              at:
                type: string
                nullable: true
                pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
            required:
              - tool
              - at
        rescan_window:
          type: object
          nullable: true
          properties:
            from:
              type: string
            to:
              type: string
    AlertGet:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        severity:
          type: integer
        tool:
          type: string
        description:
          type: string
        project_id:
          type: string
        extra: { }
        last_seen:
          type: string
          pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
        comment:
          type: string
          nullable: true
        content_digest:
          type: string
        issue_detail:
          type: string
        recommendation:
          type: string
        recommendation_detail:
          type: string
        status:
          type: string
        cdate:
          type: string
          pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
        mdate:
          type: string
          pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
      required:
        - id
        - title
        - severity
        - tool
        - description
        - project_id
        - last_seen
        - comment
        - content_digest
        - issue_detail
        - recommendation
        - recommendation_detail
        - extra
        - status
        - cdate
        - mdate
    AlertPatch:
      type: object
      properties:
        severity:
          type: integer
        comment:
          type: string
        issue_detail:
          type: string
        recommendation:
          type: string
        recommendation_detail:
          type: string
        status:
          type: string
    AlertGroups:
      type: object
      properties:
        total_groups_count:
          type: integer
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              count:
                type: integer
              title:
                type: string
              severity:
                type: integer
              last_seen:
                type: string
                pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
              project_id:
                type: string
            required:
              - count
              - title
              - severity
              - last_seen
              - project_id
              - id
      required:
        - total_groups_count
        - groups
    Hosts:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            type: object
            properties:
              host:
                type: string
              ports:
                type: array
                items:
                  type: object
                  properties:
                    port_number:
                      type: integer
                    found_by:
                      type: string
                      nullable: true
                    protocol:
                      type: string
                    last_seen:
                      type: string
                      pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                    cdate:
                      type: string
                      pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                    mdate:
                      type: string
                      pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                  required:
                    - port_number
                    - found_by
                    - protocol
                    - last_seen
                    - cdate
                    - mdate
              project_id:
                type: string
              found_by:
                type: string
                nullable: true
              pending:
                type: boolean
              cdate:
                type: string
                pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
              mdate:
                type: string
                pattern: "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
            required:
              - host
              - ports
              - project_id
              - found_by
              - pending
              - cdate
              - mdate
      required:
        - count
        - items
    Ports:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            type: object
            properties:
              port_number:
                type: integer
              host:
                type: string
      required:
        - count
        - items
    ProjectStats:
      type: object
      properties:
        hosts_count:
          type: integer
        urls_count:
          type: integer
        tasks:
          type: object
          properties:
            total_count:
              type: integer
            total_finished:
              type: integer
            finished_in_last_24_hours:
              type: integer
            finished_in_last_15_min:
              type: integer
          required:
            - total_count
            - total_finished
            - finished_in_last_24_hours
            - finished_in_last_15_min
        alerts:
          type: object
          properties:
            by_status:
              type: object
              properties:
                new:
                  type: integer
                false_positive:
                  type: integer
                not_interesting:
                  type: integer
                in_progress:
                  type: integer
                done:
                  type: integer
              required:
                - new
                - false_positive
                - not_interesting
                - in_progress
                - done
            by_level:
              type: object
              properties:
                critical:
                  type: integer
                high:
                  type: integer
                medium:
                  type: integer
                low:
                  type: integer
                info:
                  type: integer
                new_data:
                  type: integer
                unknown:
                  type: integer
              required:
                - critical
                - high
                - medium
                - low
                - info
                - new_data
                - unknown
          required:
            - by_status
            - by_level
        scans:
          type: object
          properties:
            altdns:
              type: integer
            amass:
              type: integer
            patator:
              type: integer
            crawler:
              type: integer
            dirsearch:
              type: integer
            ffuf:
              type: integer
            nessus:
              type: integer
            nmap:
              type: integer
            nuclei:
              type: integer
            phuipfpizdam:
              type: integer
            subjack:
              type: integer
            subfinder:
              type: integer
            waybackurls:
              type: integer
            wpscan:
              type: integer
            burp:
              type: integer
            grep:
              type: integer
          required:
            - altdns
            - amass
            - patator
            - crawler
            - dirsearch
            - ffuf
            - nessus
            - nmap
            - nuclei
            - phuipfpizdam
            - subjack
            - subfinder
            - waybackurls
            - wpscan
            - burp
            - grep
      required:
        - hosts_count
        - urls_count
        - tasks
        - alerts
        - scans
    ScopeCheckRequest:
      type: object
      properties:
        urls:
          type: array
          items:
            type: string
            format: uri
        domains:
          type: array
          items:
            type: string
            format: hostname
        ipv4:
          type: array
          items:
            type: string
            format: ipv4
      required:
        - urls
        - domains
        - ipv4
    ScopeCheckResponse:
      type: object
      properties:
        url_verdicts:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
            maximum: 2
        domain_verdicts:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
            maximum: 2
        ipv4_verdicts:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
            maximum: 2
      required:
        - url_verdicts
        - domain_verdicts
        - ipv4_verdicts
    Timerange:
      type: object
      properties:
        from:
          type: number
        to:
          type: number
        count:
          type: integer
